# Add support for ISO string date-time
scalar DateTime

#  Global object identification
interface Node {
  id: ID!
}

# Pagination support
interface ForwardPaginatedResponse {
  data: [Node!]!
  nextToken: String
}

enum RegressionType {
  LINEAR
  LASSO
  RIDGE
}

# Job scheduled for model
enum JobStatus {
  QUEUED
  RUNNING
  COMPLETED
  FAILED
}

type Job implements Node {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime
  status: JobStatus!
  model: Model
}

type Model implements Node {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime
  type: RegressionType!
  inputData: String!
  result: String
}

type ListJobResponse implements ForwardPaginatedResponse {
  data: [Job!]!
  nextToken: String
}

input DataPointInput {
  x: Float!
  y: Float!
}

input CreateJobInput {
  model: CreateModelInput!
}

input CreateModelInput {
  type: RegressionType!
  data: [DataPointInput!]!
  alpha: Float
}

type Query {
  listJobs: ListJobResponse!
  getJob(id: ID!): Job
}

type Mutation {
  createJob(input: CreateJobInput!): Job
}
